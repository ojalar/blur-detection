!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/risto/tontti/blur_detection/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
BlurDetector	blur_detector.py	/^class BlurDetector:$/;"	c
__init__	blur_detector.py	/^    def __init__(self, path, kernel = 5, precomputed = False):$/;"	m	class:BlurDetector
args	blur_detector.py	/^    args = parser.parse_args()$/;"	v
bd	blur_detector.py	/^    bd = BlurDetector("..\/images_vaaka", precomputed = True)$/;"	v
compute_blur_values	blur_detector.py	/^    def compute_blur_values(self): $/;"	m	class:BlurDetector
downsample	blur_detector.py	/^    def downsample(self, n = 10):$/;"	m	class:BlurDetector
generate_img_list	blur_detector.py	/^    def generate_img_list(self): $/;"	m	class:BlurDetector
img_blurriness	blur_detector.py	/^    def img_blurriness(self, img):$/;"	m	class:BlurDetector
load_blur_values	blur_detector.py	/^    def load_blur_values(self):$/;"	m	class:BlurDetector
np	blur_detector.py	/^import numpy as np$/;"	I	nameref:module:numpy
parser	blur_detector.py	/^    parser = argparse.ArgumentParser(description="Create an image collage.")$/;"	v
plot_blur_values	blur_detector.py	/^    def plot_blur_values(self):$/;"	m	class:BlurDetector
plt	blur_detector.py	/^from matplotlib import pyplot as plt$/;"	x	nameref:unknown:pyplot
save_img	blur_detector.py	/^    def save_img(self, image, sample):$/;"	m	class:BlurDetector
visualise	blur_detector.py	/^    def visualise(self, image, blur_value):$/;"	m	class:BlurDetector
visualise_random	blur_detector.py	/^    def visualise_random(self, n = 10):$/;"	m	class:BlurDetector
visualise_random_sequence	blur_detector.py	/^    def visualise_random_sequence(self, n = 10):$/;"	m	class:BlurDetector
